/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: cmzw (https://sketchfab.com/cmzw)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/stylized-planet-789725db86f547fc9163b00f302c3e70
Title: Stylized planet
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { a } from "@react-spring/three";
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { Group } from "three";
import { useThree } from '@react-three/fiber';


import bigPlanetScene from "../assets/3d/stylized_planet.glb";

type GLTFResult = GLTF & {
  nodes: Record<string, THREE.Mesh>;
  materials: Record<string, THREE.Material>;
};

type BigPlanetProps = {
    position: [number, number, number];
    scale: [number, number, number];
    rotation: [number, number, number];
    setCurrentStage: React.Dispatch<React.SetStateAction<number>>;
};
export function BigPlanet(props: BigPlanetProps): JSX.Element {
  const { setCurrentStage, ...groupProps } = props;
  const { nodes, materials } = useGLTF(bigPlanetScene) as GLTFResult;
  const bigPlanetRef = useRef<Group>(null);
  const { scene } = useThree();
  useEffect(() => {
      scene.fog = null;
  }, [scene]);

  return (
    <a.group ref={bigPlanetRef} {...groupProps}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-1.5, -0.1, 0]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="Clouds_1">
                <mesh
                  name="Object_4"
                  geometry={nodes.Object_4.geometry}
                  material={materials.Clouds}
                />
              </group>
              <group name="Planet_2">
                <mesh
                  name="Object_6"
                  geometry={nodes.Object_6.geometry}
                  material={materials.Planet}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </a.group>
  )
}
